apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply plugin: 'com.example.my'
my {
  name 'uijwyk'
  age 990
}

android {
  compileSdkVersion 29
  buildToolsVersion "29.0.3"

  dataBinding.enabled = true
  defaultConfig {
    applicationId "com.example.myprepare"
    minSdkVersion 23
    targetSdkVersion 29
    versionCode 1
    versionName "1.0"

    buildConfigField("String", "TEST_NAME", '"uijwyk"')

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
//    internal {
//      initWith debug
//    }
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }

//  flavorDimensions "paying"
//  productFlavors {
//    free {
//      dimension "paying"
//    }
//
//    paid {
//      dimension "paying"
//    }
//  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_1_8.toString()
  }

  ndkVersion '21.2.6472646'

  // `Error:Execution failed for task ‘:app:lintVitalRelease’.
  lintOptions {
    checkReleaseBuilds false
    abortOnError false
  }
}

gradle.taskGraph.whenReady {
  it.allTasks.each { task ->
    println "task name = ${task.name}, class name = ${task.class.name - '_Decorated'}"
  }
}

dependencies {
  implementation fileTree(dir: "libs", include: ["*.jar"])
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  implementation 'androidx.core:core-ktx:1.3.2'
  implementation 'androidx.appcompat:appcompat:1.2.0'
  implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
  implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'
  implementation 'com.google.android.material:material:1.2.1'
  implementation 'androidx.legacy:legacy-support-v4:1.0.0'
  testImplementation "junit:junit:$junit_version"
  androidTestImplementation 'androidx.test.ext:junit:1.1.2'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

  // Logger
  implementation 'com.orhanobut:logger:2.2.0'

  // recyclerview
  implementation 'androidx.recyclerview:recyclerview:1.1.0'

  // flutter module
  implementation project(path: ':flutter')

  // rxjava3
//    implementation 'io.reactivex.rxjava2:rxjava:2.2.8'
//    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
  implementation "io.reactivex.rxjava3:rxandroid:3.0.0"

  // retrofit
  implementation('com.squareup.retrofit2:retrofit:2.9.0')
  implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
  implementation 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'

  // gson
  implementation 'com.google.code.gson:gson:2.8.6'

  // test library
  implementation project(":testlibrary")

//  implementation project(":lib-reflection")
  implementation project(":lib-annotation-test")
  annotationProcessor project(":lib-processor")
  // butter knife
//  implementation "com.jakewharton:butterknife:10.2.3"
//  annotationProcessor "com.jakewharton:butterknife-compiler:10.2.3"

  // 看com.android.application用的
//  compileOnly 'com.android.tools.build:gradle:4.1.0'

  // coroutines
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1"

  // okhttp
//  implementation 'com.squareup.okhttp3:okhttp:4.9.0'

  // LeakCanary
  releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:2.5'
  debugImplementation "com.squareup.leakcanary:leakcanary-android:2.5"
  implementation "com.squareup.leakcanary:leakcanary-object-watcher-android:2.5"

  // lottie
  implementation 'com.airbnb.android:lottie:3.6.0'

  // JetPack
  implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"
  implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
  implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
  implementation "androidx.fragment:fragment-ktx:1.3.0-rc01"
}